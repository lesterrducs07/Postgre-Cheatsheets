#NUMERIC DATA TYPES
SMALLINT, DECIMAL, BIG INT, INTEGER, NUMERIC, REAL, DOUBLE PRECISION
 
#CHARACTER DATA TYPES
CHAR, VARCHAR, TEXT

#DATE/TIME DATA TYPES
DATE, TIME, TIMESTAMP, INTERVAL

#BOOLEAN DATA TYPES
BOOLEAN



#AGGREGATION FUNCTIONS - COUNT(), AVG(), MAX(), MIN(), 
COUNT(*)
COUNT(column_name) FROM TABLE
COUNT(column_name) AS alias_column_name FROM table_name


#AGGREGATION WITH GROUP BY CLAUSE
SELECT column_name1, SUM(column_name2) AS new_column_name2
FROM table_name
GROUP BY column_name1;


#AGGREGATION WITH GROUP BY AND HAVING CLAUSE
SELECT column_name1, SUM(column_name2) AS new_column_name2
FROM table_name
GROUP BY column_name1
HAVING SUM(column_name2) > 200;

#ANALYTICAL FUNCTION
`RANK()` assigns a rank to each row within a result set, with ties receiving the same rank and leaving gaps. 

`DENSE_RANK()` is similar to `RANK()`, but does not leave gaps between rank values, and so may have ties with the same value. 

`ROW_NUMBER()` assigns a unique number to each row within a result set. 

`LAG()` provides access to a row at a given physical offset prior to the current row within a result set.

#CASTING
::int ::numeric ::text ::timestamp
::boolean ::date ::time ::json ::float8

-- syntax
DELETE FROM table_name
WHERE condition;

-- example of delete
DELETE FROM employees
WHERE name = 'John Doe';

-- syntax updating table
UPDATE table_name
SET column1 = value1, column2 = value2, ...
WHERE condition;

-- example updating table
UPDATE employees
SET salary = 60000
WHERE name = 'John Doe';

#JOIN STATEMENTS
INNER JOIN it returns only the rows that have matching values in both tables.

LEFT JOIN returns all rows from the left table and matching rows from the right table. 
If there are no matching rows in the right table, the result will contain NULL values

RIGHT JOIN returns all rows from the right table and matching rows from the left table.
If there are no matching rows in the left table, the result will contain NULL values for the left table columns.

FULL OUTER JOIN returns all rows from both tables. If there are no matching rows in one of the tables, the result
will contain NULL values for the columns of the table that has no matching rows.


